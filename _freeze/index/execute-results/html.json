{
  "hash": "eaebe4e5756652262d1aa3f6195f9cbb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ndate: 2025-02-05\ndate-modified: last-modified\ntoc: false\n---\n\n# はじめに {.unnumbered}\n\n{{< fa brands r-project >}}（アール）は、統計解析用のプログラミング言語です。\n\n本ページでは、Rのダウンロード、インストールから使い方、その応用まで幅広く解説をしていきたいと思います。\n\n既にインターネット上では素晴らしい解説記事が多々公開されていますが、本サイトはよりわかりやすく、なるべく楽しくRの第一歩を踏み出していけるような内容を目指します。\n\n## パッケージのインストール方法について\n\n本サイトをご覧いただく前に、パッケージのインストール方法についてのみ簡単にご説明します。\n\n(@) `install.packages()`\n\n最も基本的なパッケージのインストール方法は`install.packages()`を使う方法です。\n\n``` r\ninstall.packages(\"tidyverse\")\n```\n\nのようにして、インストールしたいパッケージをダブルクォーテーションで囲んで指定します。\n\n(@) `pak::pak()`\n\nRのパッケージ管理をより便利にするために`pak`パッケージが開発されています。\n\n> pak is fast, safe and convenient.\n\nと公式でも謳われており、`pak::pak()`関数を使うことでパッケージのインストールを行ったり、依存関係の解決を自動で行ってくれたりします。\n\n以下のコードで`install.packages()`関数と同様にパッケージをインストールできます。\n\n``` r\npak::pak(\"tidyverse\")\n```\n\nこの関数は公開されたパッケージのダウンロード元であるCRANだけでなく、CRANには公開されていないGitHub上のパッケージをインストールするのにも便利です^[こちらは発展的な使い方なので、初めての方は気にする必要はありません。]。\n\n例えば、GitHub上で公開されている`tidyverse/dplyr`パッケージをインストールする場合、\n\n``` r\npak::pak(\"tidyverse/dplyr\")\n```\n\nのように、通常のインストールと同じ関数でGitHibからインストールすることができます。\n\n使いたい場合は、はじめに以下のコマンドでインストールしておいてください。\n\n``` r\ninstall.packages(\"pak\")\n```\n\n2種類の方法をご紹介しましたが、どちらを使っても構いません。\n\n**それでは始めていきましょう！**\n\n::: callout-note\n## 執筆環境\n\n\n\n最終更新日：2025年10月4日\n\n- OS: Windows 11\n\n- R version 4.5.1 (2025-06-13 ucrt)\n\n- Positron: 2025.09.0 build 139\n\n- Quarto {{< version >}}\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}